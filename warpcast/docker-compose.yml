version: '3.8' # 指定 Docker Compose 文件格式的版本

services: # 定义你想要运行的服务
  nginx-html5-server: # 服务的名称
    image: nginx:latest # 使用最新版的 Nginx 镜像
    container_name: html5_website_nginx # 容器名称
    ports: # 配置端口映射
      - "80:80" # 将宿主机的 80 端口映射到容器内部的 80 端口
      # 你也可以使用 "8080:80" 将宿主机 8080 映射到容器 80
    volumes: # 配置卷挂载
      # **绑定挂载 (Bind Mount):**
      # 这是将你的本地目录直接映射到容器内部指定目录的标准方法。
      # 格式是：宿主机路径:容器内部路径
      - /Users/titan/Library/Containers/com.utmapp.UTM/Data/Documents/Public/Warpcast/:/usr/share/nginx/html
      # 这会使 Nginx 直接从你的本地目录 /Users/titan/Library/Containers/com.utmapp.UTM/Data/Documents/Public/ 读取并服务文件。

# 如果你定义了一个命名卷 'warpcast'，它会在 Docker 中被管理，
# 但你不能直接用这里的语法将一个 *现有本地目录的内容* 导入到它。
# 使用命名卷通常是为了持久化容器产生的数据，或者在多个容器间共享数据，
# 而不是为了服务宿主机上已有的特定目录内容。
# volumes:
#   warpcast: # 定义一个名为 warpcast 的命名卷
#     driver: local # 使用本地驱动 (这是默认的)

# 如果你定义了上面的命名卷 'warpcast'，并像下面这样在服务中使用它：
# volumes:
#   - warpcast:/usr/share/nginx/html
# 这将把 Docker 管理的 'warpcast' 卷挂载到容器内的 /usr/share/nginx/html。
# 但这个卷一开始是空的（除非是第一次挂载时 Docker 复制了容器路径下的内容，
# 或者你手动/通过其他方式将文件复制进卷里），它不会自动包含你本地目录的文件。